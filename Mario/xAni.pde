
color r = color(255,0,0);
color g = color(102,85,0);
color h = color(255,165,0);

void r(float _x,float _y,float w,float h,color c){
  noStroke();
  fill(c);
  rect(Mario.x+_x,Mario.y+_y-10,w,h);
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------

void StandRight() {
  r(5, 0, 5, 1, r);
  r(4, 1, 9, 1, r);
  r(4, 2, 3, 1, g);
  r(7, 2, 2, 1, h);
  r(9, 2, 1, 2, g);
  r(10,2, 1, 2, h);
  r(3,3,1,1,g);
  r(4,3,1,2,h);
  r(5,3,1,1,g);
  r(6,3,3,1,h);
  r(11,3,2,1,h);
  r(3,4,1,1,g);
  r(5,4,2,1,g);
  r(7,4,3,1,h);
  r(10,4,1,1,g);
  r(11,4,3,1,h);
  r(3,5,2,1,g);
  r(5,5,4,1,h);
  r(9,5,4,1,g);
  r(5,6,7,1,h);
  r(4,7,2,1,g);
  r(6,7,1,1,r);
  r(7,7,3,1,g);
  r(3,8,3,1,g);
  r(6,8,1,1,r);
  r(7,8,2,1,g);
  r(9,8,1,1,r);
  r(10,8,3,1,g);
  r(2,9,4,1,g);
  r(6,9,4,1,r);
  r(10,9,4,1,g);
  r(2,10,2,1,h);
  r(4,10,1,1,g);
  r(5,10,1,1,r);
  r(6,10,1,1,h);
  r(7,10,2,1,r);
  r(9,10,1,1,h);
  r(10,10,1,1,r);
  r(11,10,1,1,g);
  r(12,10,2,1,h);
  r(2,11,3,1,h);
  r(5,11,6,1,r);
  r(11,11,3,1,h);
  r(2,12,2,1,h);
  r(4,12,8,1,r);
  r(12,12,2,1,h);
  r(4,13,3,1,r);
  r(9,13,3,1,r);
  r(3,14,3,1,g);
  r(10,14,3,1,g);
  r(2,15,4,1,g);
  r(10,15,4,1,g);
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------

void StandLeft() {
  r(6,0,5,1,r);
  r(3,1,9,1,r);
  r(5,2,4,1,h);
  r(6,2,1,1,g);
  r(9,2,3,1,g);
  r(3,3,9,1,h);
  r(6,3,1,1,g);
  r(10,3,1,1,g);
  r(12,3,1,1,g);
  r(2,4,3,1,h);
  r(5,4,1,1,g);
  r(6,4,3,1,h);
  r(9,4,2,1,g);
  r(11,4,1,1,h);
  r(12,4,1,1,g);
  r(3,5,10,1,g);
  r(7,5,4,1,h);
  r(4,6,7,1,h);
  r(6,7,6,1,g);
  r(9,7,1,1,r);
  r(3,8,10,1,g);
  r(6,8,1,1,r);
  r(9,8,1,1,r);
  r(2,9,12,1,g);
  r(6,9,4,1,r);
  r(2,10,12,1,h);
  r(4,10,1,1,g);
  r(5,10,1,1,r);
  r(7,10,2,1,r);
  r(10,10,1,1,r);
  r(11,10,1,1,g);
  r(2,11,12,1,h);
  r(5,11,6,1,r);
  r(2,12,12,1,h);
  r(4,12,8,1,r);
  r(4,13,3,1,r);
  r(9,13,3,1,r);
  r(3,14,4,1,g);
  r(10,14,3,1,g);
  r(2,15,4,1,g);
  r(10,15,4,1,g);
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------

void RunRight1() {
  float x = 0;
  r(x+6,0,5,1,r);
  r(x+5,1,9,1,r);
  r(x+5,2,3,1,g);
  r(x+8,2,2,1,h);
  r(x+10,2,1,1,g);
  r(x+11,2,1,1,h);
  r(x+4,3,1,1,g);
  r(x+5,3,1,1,h);
  r(x+6,3,1,1,g);
  r(x+7,3,3,1,h);
  r(x+10,3,1,1,g);
  r(x+11,3,3,1,h);
  r(x+4,4,1,1,g);
  r(x+5,4,1,1,h);
  r(x+6,4,2,1,g);
  r(x+8,4,3,1,h);
  r(x+11,4,1,1,g);
  r(x+12,4,3,1,h);
  r(x+4,5,2,1,g);
  r(x+6,5,4,1,h);
  r(x+10,5,4,1,g);
  r(x+6,6,7,1,h);
  r(x+5,7,2,1,g);
  r(x+7,7,1,1,r);
  r(x+8,7,3,1,g);
  r(x+4,8,8,1,g);
  r(x+8,8,2,1,r);
  r(x+4,9,3,1,g);
  r(x+7,9,6,1,r);
  r(x+9,9,1,1,h);
  r(x+12,9,1,1,h);
  r(x+4,10,4,1,g);
  r(x+8,10,5,1,r);
  r(x+4,11,9,1,r);
  r(x+5,11,2,1,g);
  r(x+7,11,3,1,h);
  r(x+5,12,7,1,r);
  r(x+6,12,1,1,g);
  r(x+7,12,2,1,h);
  r(x+6,13,3,1,r);
  r(x+9,13,3,1,g);
  r(x+6,14,7,1,g);
  r(x+6,15,4,1,g);
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------

void RunRight2(){
  float x =0;
  r(x+6,0,5,1,r);
  r(x+5,1,9,1,r);
  r(x+5,2,3,1,g);
  r(x+8,2,2,1,h);
  r(x+10,2,1,1,g);
  r(x+11,2,1,1,h);
  r(x+4,3,1,1,g);
  r(x+5,3,1,1,h);
  r(x+6,3,1,1,g);
  r(x+7,3,3,1,h);
  r(x+10,3,1,1,g);
  r(x+11,3,3,1,h);
  r(x+4,4,1,1,g);
  r(x+5,4,1,1,h);
  r(x+6,4,2,1,g);
  r(x+8,4,3,1,h);
  r(x+11,4,1,1,g);
  r(x+12,4,3,1,h);
  r(x+4,5,2,1,g);
  r(x+6,5,4,1,h);
  r(x+10,5,4,1,g);
  r(x+6,6,7,1,h);
  r(x+5,7,4,1,g);
  r(x+9,7,1,1,r);
  r(x+10,7,1,1,g);
  r(x+12,7,1,1,h);
  r(x+4,8,1,1,h);
  r(x+5,8,7,1,g);
  r(x+11,8,3,1,h);
  r(x+3,9,2,1,h);
  r(x+5,9,1,1,r);
  r(x+6,9,5,1,g);
  r(x+11,9,2,1,h);
  r(x+3,10,2,1,g);
  r(x+5,10,7,1,r);
  r(x+3,11,1,1,g);
  r(x+4,11,8,1,r);
  r(x+2,12,2,1,g);
  r(x+4,12,3,1,r);
  r(x+8,12,3,1,r);
  r(x+2,13,1,1,g);
  r(x+7,13,3,1,g);
  r(x+7,14,4,1,g);
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------

void RunRight3(){
  float x =0;
  r(x+6,0,5,1,r);
  r(x+5,1,9,1,r);
  r(x+5,2,3,1,g);
  r(x+8,2,2,1,h);
  r(x+10,2,1,1,g);
  r(x+11,2,1,1,h);
  r(x+4,3,1,1,g);
  r(x+5,3,1,1,h);
  r(x+6,3,1,1,g);
  r(x+7,3,3,1,h);
  r(x+10,3,1,1,g);
  r(x+11,3,3,1,h);
  r(x+4,4,1,1,g);
  r(x+5,4,1,1,h);
  r(x+6,4,2,1,g);
  r(x+8,4,3,1,h);
  r(x+11,4,1,1,g);
  r(x+12,4,3,1,h);
  r(x+4,5,2,1,g);
  r(x+6,5,4,1,h);
  r(x+10,5,4,1,g);
  r(x+6,6,7,1,h);
  r(x+3,7,4,1,g);
  r(x+7,7,2,1,r);
  r(x+9,7,2,1,g);
  r(x+1,8,2,1,h);
  r(x+3,8,4,1,g);
  r(x+7,8,3,1,r);
  r(x+10,8,3,1,g);
  r(x+13,8,3,1,h);
  r(x+1,9,3,1,h);
  r(x+5,9,2,1,g);
  r(x+7,9,1,1,r);
  r(x+8,9,1,1,h);
  r(x+9,9,3,1,r);
  r(x+12,9,2,1,g);
  r(x+14,9,2,1,h);
  r(x+1,10,2,1,h);
  r(x+5,10,7,1,r);
  r(x+14,10,1,1,g);
  r(x+4,11,9,1,r);
  r(x+4,11,11,1,r);
  r(x+13,11,2,1,g);
  r(x+3,12,12,1,r);
  r(x+13,12,2,1,g);
  r(x+2,13,2,1,g);
  r(x+4,13,3,1,r);
  r(x+10,13,3,1,r);
  r(x+13,13,2,1,g);
  r(x+2,14,3,1,g);
  r(x+3,15,3,1,g);
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------

void RunRight4(){
  r(6,0,5,1,r);
  r(13,0,3,1,h);
  r(5,1,9,1,r);
  r(14,1,2,1,h);
  r(5,2,3,1,g);
  r(8,2,2,1,h);
  r(10,2,1,1,g);
  r(11,2,1,1,h);
  r(13,2,3,1,g);
  r(4,3,1,1,g);
  r(5,3,1,1,h);
  r(6,3,1,1,g);
  r(7,3,3,1,h);
  r(10,3,1,1,g);
  r(11,3,3,1,h);
  r(14,3,2,1,g);
  r(4,4,1,1,g);
  r(5,4,1,1,h);
  r(6,4,2,1,g);
  r(8,4,3,1,h);
  r(11,4,1,1,g);
  r(12,4,3,1,h);
  r(15,4,1,1,g);
  r(4,5,2,1,g);
  r(6,5,4,1,h);
  r(10,5,5,1,g);
  r(6,6,7,1,h);
  r(13,6,1,1,g);
  r(2,7,5,1,g);
  r(7,7,1,1,r);
  r(8,7,3,1,g);
  r(11,7,1,1,r);
  r(12,7,1,1,g);
  r(1,8,7,1,g);
  r(8,8,1,1,r);
  r(9,8,3,1,g);
  r(12,8,1,1,r);
  r(0,9,2,1,h);
  r(2,9,6,1,g);
  r(8,9,5,1,r);
  r(0,10,3,1,h);
  r(5,10,1,1,r);
  r(6,10,1,1,g);
  r(7,10,3,1,r);
  r(10,10,1,1,h);
  r(11,10,1,1,r);
  r(12,10,1,1,h);
  r(13,10,1,1,r);
  r(15,9,1,1,g);
  r(14,10,2,1,g);
  r(1,11,1,1,h);
  r(3,11,1,1,g);
  r(5,11,9,1,r);
  r(14,11,2,1,g);
  r(2,12,3,1,g);
  r(5,12,9,1,r);
  r(14,12,2,1,g);
  r(1,13,3,1,g);
  r(4,13,7,1,r);
  r(1,14,1,1,g);
  r(4,14,4,1,r);
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------

void RunLeft1() {
  float x = 0;
  r(x+5,0,5,1,r);
  r(x+2,1,9,1,r);
  r(x+4,2,4,1,h);
  r(x+5,2,1,1,g);
  r(x+8,2,3,1,g);
  r(x+2,3,9,1,h);
  r(x+5,3,1,1,g);
  r(x+9,3,1,1,g);
  r(x+11,3,1,1,g);
  r(x+1,4,10,1,h);
  r(x+4,4,1,1,g);
  r(x+8,4,2,1,g);
  r(x+11,4,1,1,g);
  r(x+2,5,10,1,g);
  r(x+6,5,4,1,h);
  r(x+3,6,7,1,h);
  r(x+5,7,6,1,g);
  r(x+8,7,1,1,r);
  r(x+4,8,8,1,g);
  r(x+6,8,2,1,r);
  r(x+3,9,4,1,h);
  r(x+4,9,2,1,r);
  r(x+7,9,2,1,r);
  r(x+9,9,3,1,g);
  r(x+3,10,5,1,r);
  r(x+8,10,4,1,g);
  r(x+3,11,9,1,r);
  r(x+6,11,3,2,h);
  r(x+9,11,2,1,g);
  r(x+4,12,3,1,r);
  r(x+9,12,1,1,g);
  r(x+10,12,1,1,r);
  r(x+4,13,3,1,g);
  r(x+7,13,3,1,r);
  r(x+3,14,7,1,g);
  r(x+6,15,4,1,g);
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------

void RunLeft2() {
  float x = 0;
  r(x+5,0,5,1,r);
  r(x+2,1,9,1,r);
  r(x+4,2,4,1,h);
  r(x+5,2,1,1,g);
  r(x+8,2,3,1,g);
  r(x+2,3,9,1,h);
  r(x+5,3,1,1,g);
  r(x+9,3,1,1,g);
  r(x+11,3,1,1,g);
  r(x+1,4,10,1,h);
  r(x+4,4,1,1,g);
  r(x+8,4,2,1,g);
  r(x+11,4,1,1,g);
  r(x+2,5,10,1,g);
  r(x+6,5,4,1,h);
  r(x+3,6,7,1,h);
  r(x+3,7,1,1,h);
  r(x+5,7,6,3,g);
  r(x+6,7,1,1,r);
  r(x+2,8,3,1,h);
  r(x+11,8,1,1,h);
  r(x+3,9,2,1,h);
  r(x+10,9,1,1,r);
  r(x+11,9,2,1,h);
  r(x+4,10,8,2,r);
  r(x+11,10,2,1,g);
  r(x+12,11,1,1,g);
  r(x+5,12,3,1,r);
  r(x+9,12,3,1,r);
  r(x+12,12,2,1,g);
  r(x+6,13,3,1,g);
  r(x+13,13,1,1,g);
  r(x+5,14,4,1,g);
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------

void RunLeft3() {
  float x = 0;
  r(x+5,0,5,1,r);
  r(x+2,1,9,1,r);
  r(x+4,2,4,1,h);
  r(x+5,2,1,1,g);
  r(x+8,2,3,1,g);
  r(x+2,3,9,1,h);
  r(x+5,3,1,1,g);
  r(x+9,3,1,1,g);
  r(x+11,3,1,1,g);
  r(x+1,4,10,1,h);
  r(x+4,4,1,1,g);
  r(x+8,4,2,1,g);
  r(x+11,4,1,1,g);
  r(x+2,5,10,1,g);
  r(x+6,5,4,1,h);
  r(x+3,6,7,1,h);
  r(x+5,7,8,1,g);
  r(x+7,7,2,1,r);
  r(x+0,8,15,1,h);
  r(x+3,8,10,1,g);
  r(x+6,8,3,1,r);
  r(x+0,9,2,1,h);
  r(x+2,9,9,1,g);
  r(x+4,9,5,1,r);
  r(x+7,9,1,1,h);
  r(12,9,3,1,h);
  r(x+1,10,1,1,g);
  r(x+4,10,7,1,r);
  r(x+13,10,2,1,h);
  r(x+1,11,2,3,g);
  r(x+3,11,9,1,r);
  r(x+3,12,10,1,r);
  r(x+3,13,3,1,r);
  r(x+9,13,3,1,r);
  r(x+12,13,2,1,g);
  r(x+11,14,3,1,g);
  r(x+10,15,3,1,g);
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------

void RunLeft4() {
  r(0,0,3,1,h);
  r(5,0,5,1,r);
  r(0,1,2,1,h);
  r(2,1,9,1,r);
  r(0,2,3,1,g);
  r(4,2,4,1,h);
  r(5,2,1,1,g);
  r(8,2,3,1,g);
  r(0,3,2,2,g);
  r(2,3,9,1,h);
  r(5,3,1,1,g);
  r(9,3,1,1,g);
  r(11,3,1,1,g);
  r(1,4,10,1,h);
  r(4,4,1,1,g);
  r(8,4,2,1,g);
  r(11,4,1,1,g);
  r(1,5,10,1,g);
  r(6,5,4,1,h);
  r(2,6,1,1,g);
  r(3,6,7,1,h);
  r(3,7,11,1,g);
  r(4,7,1,1,r);
  r(8,7,1,1,r);
  r(3,8,1,1,r);
  r(4,8,11,1,g);
  r(7,8,1,1,r);
  r(0,9,1,1,g);
  r(3,9,5,1,r);
  r(8,9,6,1,g);
  r(14,9,2,1,h);
  r(0,10,2,3,g);
  r(2,10,9,3,r);
  r(3,10,1,1,h);
  r(5,10,1,1,h);
  r(9,10,1,1,g);
  r(13,10,3,1,h);
  r(12,11,1,1,g);
  r(14,11,1,1,h);
  r(11,12,3,1,g);
  r(5,13,7,1,r);
  r(12,13,3,1,g);
  r(8,14,4,1,r);
  r(14,14,1,1,g);
}
//--------------------------------------------------------------------------------------------------------------------------------------------------------------

void Die() {
  r(6,1,4,1,r);
  r(3,2,1,1,h);
  r(5,2,6,1,r);
  r(12,2,1,1,h);
  r(1,3,14,3,h);
  r(4,3,1,1,g);
  r(6,3,1,2,g);
  r(9,3,1,2,g);
  r(11,3,1,1,g);
  r(3,4,2,1,g);
  r(11,4,2,1,g);
  r(3,5,3,1,g);
  r(10,5,3,1,g);
  r(3,6,10,1,g);
  r(7,6,2,1,h);
  r(4,7,8,2,g);
  r(5,7,1,1,h);
  r(10,7,1,1,h);
  r(5,8,6,2,h);
  r(3,9,3,1,r);
  r(10,9,3,1,r);
  r(2,10,12,4,g);
  r(4,10,2,1,r);
  r(10,10,2,1,r);
  r(5,11,2,1,r);
  r(9,11,2,1,r);
  r(5,12,6,3,r);
  r(6,12,1,1,h);
  r(9,12,1,1,h);
  r(3,14,2,1,g);
  r(11,14,2,1,g);
}
